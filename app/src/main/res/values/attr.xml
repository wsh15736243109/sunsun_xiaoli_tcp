<?xml version="1.0" encoding="utf-8"?>
<resources>
    <declare-styleable name="LoweImageView">

        <!-- 比例=宽/高 -->
        <attr name="ratio" format="float" />
    </declare-styleable>
    <!-- 自定义圆形进度条，属性设置 -->
    <declare-styleable name="CustomCircleProgress">
        <!-- 默认圆的颜色 -->
        <attr name="progress_default_color" format="color"/>
        <!-- 进度圆的颜色 -->
        <attr name="progress_reached_color" format="color"/>
        <!-- 进度条的高度 -->
        <attr name="progress_reached_height" format="dimension"/>
        <!-- 无进度时(默认圆)的边框高 -->
        <attr name="progress_default_height" format="dimension"/>
        <!-- 圆的半径 -->
        <attr name="circle_radius" format="dimension"/>
    </declare-styleable>

    <!-- 进度百分比文字大小 -->
    <attr name="percent_text_size" format="dimension" />
    <!-- 圆形进度条边框大小 -->
    <attr name="stroke_width" format="dimension" />
    <!-- 矩形进度条 四周圆角大小 -->
    <attr name="rect_round" format="dimension" />
    <!-- 矩形进度条 是空心样式还是实心样式 -->
    <attr name="isHorizonStroke" format="boolean" />
    <!-- 进度百分比文字颜色 -->
    <attr name="percent_text_color" format="color|integer" />
    <!-- 进度条背景颜色 -->
    <attr name="progressBarBgColor" format="color|integer" />
    <!-- 扇形进度条颜色 -->
    <attr name="sectorColor" format="color|integer" />
    <!-- 扇形背景颜色 -->
    <attr name="unSweepColor" format="color|integer" />
    <!-- 进度颜色 -->
    <attr name="progressColor" format="color|integer" />
    <!-- 进度文字是否显示百分号 -->
    <attr name="showPercentSign" format="boolean"/>
    <!-- 进度条样式圆形还是矩形 -->
    <attr name="orientation">
        <enum name="horizontal" value="0"/>
        <enum name="circle" value="1"/>
        <enum name="sector" value="2"/>
    </attr>

    <declare-styleable name="cbprogressbar">
        <attr name="percent_text_size" />
        <attr name="isHorizonStroke" />
        <attr name="percent_text_color" />
        <attr name="progressBarBgColor" />
        <attr name="progressColor" />
        <attr name="sectorColor" />
        <attr name="unSweepColor" />
        <attr name="orientation" />
        <attr name="stroke_width" />
        <attr name="rect_round" />
        <attr name="showPercentSign" />
    </declare-styleable>
    <declare-styleable name="MySeekBar">
        <attr name="textsize" format="dimension" />
        <attr name="textcolor" format="color" />
        <attr name="img" format="reference" />
    </declare-styleable>
    <declare-styleable name="CircleRelativeLayoutLayout">
        <attr name="background_color" format="color" />
        <attr name="background_alpha" format="integer" />
    </declare-styleable>
    <!-- 电池 -->
    <declare-styleable name="MyBattery">
        <attr name="mb_showPercent" format="boolean"/>
        <attr name="mb_powerColor" format="color"/>
        <attr name="mb_baseColor" format="color"/>
        <attr name="mb_percentTextSize" format="dimension"/>
    </declare-styleable>
    <declare-styleable name="RatingBar">
        <!--尺寸值-->
        <attr name="starImageSize" format="dimension" />
        <!--星星间距-->
        <attr name="starPadding" format="dimension" />
        <!--星星总数-->
        <attr name="starCount" format="integer" />
        <!--空白的星星资源文件值-->
        <attr name="starEmpty" format="reference" />
        <!--满星资源文件值-->
        <attr name="starFill" format="reference" />
        <!--半星资源文件值-->
        <attr name="starHalf" format="reference" />
        <!--是否可点击boolean值-->
        <attr name="clickable" format="boolean" />
        <!--当前进度float值-->
        <attr name="starStep" format="float" />
        <!--每次进度方式的值，整星还是半星-->
        <attr name="stepSize">
            <enum name="Half" value="0" />
            <enum name="Full" value="1" />
        </attr>
    </declare-styleable>


    <declare-styleable name="ZrcAbsListView">
        <!-- Drawable used to indicate the currently selected item in the list. -->
        <attr name="android:listSelector"/>
        <!-- When set to true, the selector will be drawn over the selected item.
             Otherwise the selector is drawn behind the selected item. The default
             value is false. -->
        <attr name="android:drawSelectorOnTop"/>
        <!-- Used by ListView and GridView to stack their content from the bottom. -->
        <attr name="android:stackFromBottom"/>
        <!-- When set to true, the list uses a drawing cache during scrolling.
             This makes the rendering faster but uses more memory. The default
             value is true. -->
        <attr name="android:scrollingCache"/>
        <!-- Sets the transcript mode for the list. In transcript mode, the list
             scrolls to the bottom to make new items visible when they are added. -->
        <attr name="android:transcriptMode" />
        <!-- Indicates that this list will always be drawn on top of solid, single-color
             opaque background. This allows the list to optimize drawing. -->
        <attr name="android:cacheColorHint"/>
        <!-- When set to true, the list will use a more refined calculation
             method based on the pixels height of the items visible on screen. This
             property is set to true by default but should be set to false if your adapter
             will display items of varying heights. When this property is set to true and
             your adapter displays items of varying heights, the scrollbar thumb will
             change size as the user scrolls through the list. When set to fale, the list
             will use only the number of items in the adapter and the number of items visible
             on screen to determine the scrollbar's properties. -->
        <attr name="android:smoothScrollbar"/>
        <!-- Defines the choice behavior for the view. By default, lists do not have
             any choice behavior. By setting the choiceMode to singleChoice, the list
             allows up to one item to be in a chosen state. By setting the choiceMode to
             multipleChoice, the list allows any number of items to be chosen.
             Finally, by setting the choiceMode to multipleChoiceModal the list allows
             any number of items to be chosen in a special selection mode.
             The application will supply a
             {@link android.widget.AbsListView.MultiChoiceModeListener} using
             {@link android.widget.AbsListView#setMultiChoiceModeListener} to control the
             selection mode. This uses the {@link android.view.ActionMode} API. -->
        <attr name="android:choiceMode" />
    </declare-styleable>
    <declare-styleable name="ListView">
        <!-- Reference to an array resource that will populate the ListView.  For static content,
             this is simpler than populating the ListView programmatically. -->
        <attr name="android:entries" />
        <!-- Drawable or color to draw between list items. -->
        <attr name="android:divider"/>
        <!-- Height of the divider. Will use the intrinsic height of the divider if this
             is not specified. -->
        <attr name="android:dividerHeight" />
        <!-- When set to false, the ListView will not draw the divider after each header view.
             The default value is true. -->
        <attr name="android:headerDividersEnabled"/>
        <!-- When set to false, the ListView will not draw the divider before each footer view.
             The default value is true. -->
        <attr name="android:footerDividersEnabled"/>
        <!-- Drawable to draw above list content. -->
        <attr name="android:overScrollHeader"/>
        <!-- Drawable to draw below list content. -->
        <attr name="android:overScrollFooter"/>
    </declare-styleable>
</resources>